import{S as s,M as n}from"../assets/index-DcL2QsEm.js";import{b as w,i as d,g as u}from"../assets/chrome-mock-B1Y85l16.js";console.log("Riftwallet Background Script loaded");chrome.runtime.onInstalled.addListener(async e=>{console.log("Extension installed:",e.reason),e.reason==="install"&&await p()});async function p(){try{const e=w();await chrome.storage.local.set({[s.DEVICE_ID]:e,[s.WALLETS]:[],[s.SETTINGS]:{language:"en",currency:"USD",theme:"light",notifications:!0,autoLock:!0,lockTimeout:3e5}}),console.log("Extension initialized with device ID:",e)}catch(e){console.error("Failed to initialize extension:",e)}}chrome.runtime.onMessage.addListener((e,a,t)=>(console.log("Background received message:",e.type,e.data),h(e).then(r=>{t({success:!0,data:r})}).catch(r=>{console.error("Message handling error:",r),t({success:!1,error:r.message})}),!0));async function h(e){switch(e.type){case n.GET_WALLETS:return await c();case n.CREATE_WALLET:return await f(e.data);case n.IMPORT_WALLET:return await E(e.data);case n.DELETE_WALLET:return await T(e.data.walletId);case n.GET_BALANCE:return await g(e.data.walletId);case n.TRANSFER:return await S(e.data);case n.SWAP:return await I(e.data);case n.GET_SETTINGS:return await y();case n.UPDATE_SETTINGS:return await m(e.data);case n.GET_SUPPORTED_CHAINS:return await _();case n.REFRESH_TOKEN_PRICES:return await v(e.data.walletId);default:throw new Error(`Unknown message type: ${e.type}`)}}async function c(){d();const e=u(),t=(await e.get([s.DEVICE_ID,s.WALLETS]))[s.DEVICE_ID];if(!t)throw new Error("Device ID not found");const o=await(await fetch(`https://www.riftwallet.io/api/v1/wallets/?device_id=${t}`)).json();if(o.state==="success")return await e.set({[s.WALLETS]:o.data||[]}),o.data||[];throw new Error(o.message||"Failed to get wallets")}async function f(e){const t=(await chrome.storage.local.get([s.DEVICE_ID]))[s.DEVICE_ID];if(!t)throw new Error("Device ID not found");const o=await(await fetch("https://www.riftwallet.io/api/v1/wallets/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...e,device_id:t})})).json();if(o.state==="success")return await c(),o.data;throw new Error(o.message||"Failed to create wallet")}async function E(e){const t=(await chrome.storage.local.get([s.DEVICE_ID]))[s.DEVICE_ID];if(!t)throw new Error("Device ID not found");let r="";if(e.private_key)r="import_private_key";else if(e.mnemonic)r="import_by_mnemonic";else if(e.address)r="import_watch_only";else throw new Error("Invalid import data");const o={...e,device_id:t};console.log("Import wallet request:",{endpoint:r,url:`https://www.riftwallet.io/api/v1/wallets/${r}/`,body:o});const l=await fetch(`https://www.riftwallet.io/api/v1/wallets/${r}/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),i=await l.json();if(console.log("Import wallet response:",{status:l.status,statusText:l.statusText,data:i}),i.state==="success")return await c(),i.data;throw console.error("Import wallet failed:",i),new Error(i.message||"Failed to import wallet")}async function T(e){const t=await(await fetch(`http://192.168.3.56:8000/api/v1/wallets/${e}/delete_wallet/`,{method:"POST",headers:{"Content-Type":"application/json"}})).json();if(t.state==="success")return await c(),t.data;throw new Error(t.message||"Failed to delete wallet")}async function g(e){const t=await(await fetch(`http://192.168.3.56:8000/api/v1/wallets/${e}/get_all_balances/`)).json();if(t.state==="success")return t;throw new Error(t.message||"Failed to get balance")}async function S(e){const t=await(await fetch(`http://192.168.3.56:8000/api/v1/wallets/${e.walletId}/transfer/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json();if(t.state==="success")return t.data;throw new Error(t.message||"Transfer failed")}async function I(e){const t=await(await fetch(`http://192.168.3.56:8000/api/v1/wallets/${e.walletId}/swap/execute/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json();if(t.state==="success")return t.data;throw new Error(t.message||"Swap failed")}async function y(){return(await chrome.storage.local.get([s.SETTINGS]))[s.SETTINGS]||{}}async function m(e){return await chrome.storage.local.set({[s.SETTINGS]:e}),e}async function _(){const a=await(await fetch("https://www.riftwallet.io/api/v1/wallets/get_supported_chains/")).json();if(a.state==="success")return a.data||[];throw new Error(a.message||"Failed to get supported chains")}async function v(e){const t=await(await fetch(`https://www.riftwallet.io/api/v1/wallets/${e}/get_token_prices/`,{method:"GET",headers:{"Content-Type":"application/json"}})).json();if(t.status==="success")return t;throw new Error(t.message||"Failed to refresh token prices")}chrome.alarms.create("refreshData",{periodInMinutes:5});chrome.alarms.onAlarm.addListener(async e=>{if(e.name==="refreshData")try{await c(),console.log("Data refreshed")}catch(a){console.error("Failed to refresh data:",a)}});
