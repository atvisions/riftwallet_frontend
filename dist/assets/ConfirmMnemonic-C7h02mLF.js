import{d as D,u as R,r as c,c as f,o as U,g as $,F as w,f as i,i as e,e as u,C as j,G as g,I as O,n as I,A as S,E as N,H as G,J}from"./auth-BwimyXkQ.js";import{a as Y,u as q}from"./preload-helper-D1eRigLN.js";import{A as z}from"./chrome-mock-0jeXDaAI.js";import{R as H}from"./ResponsiveLayout-sFjR_nb-.js";import{_ as K}from"./_plugin-vue_export-helper-DlAUqK2U.js";const Q={class:"confirm-container"},X={class:"input-card"},Z={class:"card-header"},ee={class:"input-actions"},se=["disabled"],ae={key:0,class:"ri-loader-4-line animate-spin"},oe={key:1,class:"ri-clipboard-line"},te=["disabled"],le={class:"word-grid"},re={class:"word-number"},ne=["onUpdate:modelValue","placeholder"],ie={class:"password-card"},de={class:"password-input-group"},ce={key:0,class:"error-message"},ue={class:"bottom-section"},pe=["disabled"],ve={key:0,class:"ri-loader-4-line animate-spin"},me={key:1,class:"ri-add-line"},fe=D({__name:"ConfirmMnemonic",setup(ge){const h=q(),E=R(),l=Y(),n=c(Array(12).fill("")),d=c(""),v=c(!1),p=c(!1),o=c(""),y=c(""),b=c(""),_=f(()=>n.value.every(a=>a.trim().length>0)),C=f(()=>d.value.length>=6),W=f(()=>n.value.some(a=>a.trim().length>0)),M=f(()=>{const a=d.value.length;return a===0?"":a<6?"weak":a<10?"medium":"strong"}),P=()=>{h.go(-1)},k=()=>{o.value=""},x=()=>{if(o.value="",d.value.length>0&&d.value.length<6){o.value="Password must be at least 6 characters";return}},A=async()=>{if(!p.value)try{if(p.value=!0,o.value="",!navigator.clipboard){o.value="Clipboard API not supported. Please type your seed phrase manually.";return}try{if((await navigator.permissions.query({name:"clipboard-read"})).state==="denied"){o.value="Clipboard access denied. Please allow clipboard permissions in your browser settings or type manually.";return}}catch{console.log("Permission check not supported, proceeding with clipboard read")}const a=await navigator.clipboard.readText();console.log("Clipboard content:",a),T(a)}catch(a){console.error("Clipboard error:",a),a.name==="NotAllowedError"?o.value="Clipboard access denied. Please allow clipboard permissions or type manually.":a.name==="NotFoundError"?o.value="No text found in clipboard. Please go back to the previous page and copy your seed phrase first.":a.name==="SecurityError"?o.value="Clipboard access blocked by security policy. Please type your seed phrase manually.":o.value="Failed to read from clipboard. Please go back and copy your seed phrase, or type manually."}finally{p.value=!1}},T=a=>{if(!a||!a.trim()){o.value="No text found in clipboard. Please go back to the previous page and copy your seed phrase first.";return}const s=a.trim().split(/\s+/).filter(r=>r.length>0);console.log("Pasted text:",a),console.log("Parsed words:",s),s.length===12?(n.value=s.map(r=>r.toLowerCase().trim()),k(),o.value="",setTimeout(()=>{o.value||console.log("Successfully pasted 12 words")},100)):s.length>12?o.value=`Too many words (${s.length}). Please paste exactly 12 words.`:s.length>0?o.value=`Not enough words (${s.length}). Please paste exactly 12 words.`:o.value="Invalid seed phrase format. Please paste 12 words separated by spaces."},V=()=>{n.value=Array(12).fill(""),o.value=""},L=async()=>{if(!(!_.value||!C.value))try{o.value="",v.value=!0;const a=n.value.join(" ").toLowerCase(),s=y.value.toLowerCase();if(a!==s){o.value="The seed phrase you entered does not match. Please try again.";return}const r=await fetch(`${z.API_BASE_URL}/wallets/verify_mnemonic/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({device_id:E.deviceId,chain:b.value,mnemonic:a,payment_password:d.value})}),t=await r.json();if(!r.ok||t.state!=="success")throw new Error(t.message||"Failed to verify mnemonic");if(t.data&&t.data.success)if(console.log("✅ Wallet verification successful, reloading wallets..."),await l.loadWallets(),console.log("📋 Wallets loaded:",l.wallets.length),l.wallets.length>0){if(t.data.wallet&&t.data.wallet.id){console.log("🔍 Looking for wallet with ID:",t.data.wallet.id);const m=l.wallets.find(F=>F.id===t.data.wallet.id);m?(console.log("✅ Found new wallet, setting as current:",m.name),await l.setCurrentWallet(m)):(console.log("❌ New wallet not found, selecting first wallet"),await l.setCurrentWallet(l.wallets[0]))}else console.log("📝 No wallet ID in response, selecting first wallet"),await l.setCurrentWallet(l.wallets[0]);console.log("🎯 Current wallet set:",l.currentWallet?.name)}else console.log("❌ No wallets found after reload");sessionStorage.removeItem("generated_mnemonic"),sessionStorage.removeItem("selected_chain"),console.log("🧹 Temporary data cleared"),console.log("🚀 Navigating to home page..."),h.push("/"),console.log("✅ Navigation initiated")}catch(a){o.value=a instanceof Error?a.message:"Verification failed"}finally{v.value=!1}},B=()=>{const a=sessionStorage.getItem("generated_mnemonic"),s=sessionStorage.getItem("selected_chain");a&&s?(y.value=a,b.value=s):o.value="No mnemonic data found. Please go back and start over."};return U(()=>{B()}),(a,s)=>(i(),$(H,{title:"Confirm Seed Phrase","show-header":!0,"show-footer":!0,scrollable:!0,padding:"16px",onBack:P},{header:w(()=>[e("div",{class:"page-header"},[e("div",{class:"header-left"},[e("button",{onClick:P,class:"back-button"},s[1]||(s[1]=[e("i",{class:"ri-arrow-left-line"},null,-1)])),s[2]||(s[2]=e("h1",{class:"header-title"},"Confirm Seed Phrase",-1))])])]),footer:w(()=>[e("div",ue,[e("button",{class:"confirm-btn",disabled:!_.value||!C.value||v.value,onClick:L},[v.value?(i(),u("i",ve)):(i(),u("i",me)),e("span",null,g(v.value?"Creating Wallet...":"Create Wallet"),1)],8,pe)])]),default:w(()=>[e("div",Q,[s[8]||(s[8]=e("div",{class:"progress-section"},[e("div",{class:"progress-bar"},[e("div",{class:"progress-fill",style:{width:"100%"}})]),e("div",{class:"progress-text"},"Step 2 of 2")],-1)),s[9]||(s[9]=e("div",{class:"header-section"},[e("div",{class:"header-icon"},[e("i",{class:"ri-shield-check-line"})]),e("h2",null,"Confirm Recovery Phrase"),e("p",null,"Enter your 12-word recovery phrase to verify you've saved it correctly.")],-1)),e("div",X,[e("div",Z,[s[4]||(s[4]=e("h3",null,"Enter Your Recovery Phrase",-1)),e("div",ee,[e("button",{class:"paste-btn",onClick:A,disabled:p.value},[p.value?(i(),u("i",ae)):(i(),u("i",oe)),e("span",null,g(p.value?"Pasting...":"Paste"),1)],8,se),e("button",{class:"clear-btn",onClick:V,disabled:!W.value},s[3]||(s[3]=[e("i",{class:"ri-delete-bin-line"},null,-1),e("span",null,"Clear",-1)]),8,te)])]),e("div",le,[(i(!0),u(G,null,O(n.value,(r,t)=>(i(),u("div",{key:t,class:I(["word-input-item",{filled:r.trim()}])},[e("span",re,g(t+1),1),S(e("input",{"onUpdate:modelValue":m=>n.value[t]=m,type:"text",placeholder:`Word ${t+1}`,class:"word-input",onInput:k,autocomplete:"off",spellcheck:"false"},null,40,ne),[[N,n.value[t]]])],2))),128))])]),e("div",ie,[s[6]||(s[6]=e("div",{class:"card-header"},[e("div",{class:"password-icon"},[e("i",{class:"ri-lock-line"})]),e("div",{class:"password-info"},[e("h3",null,"Verify Your Password"),e("p",null,"Enter your wallet password to complete setup")])],-1)),e("div",de,[S(e("input",{"onUpdate:modelValue":s[0]||(s[0]=r=>d.value=r),type:"password",placeholder:"Enter your wallet password",class:"password-input",onInput:x},null,544),[[N,d.value]]),e("div",{class:I(["password-strength",M.value])},s[5]||(s[5]=[e("div",{class:"strength-bar"},null,-1)]),2)])]),o.value?(i(),u("div",ce,[s[7]||(s[7]=e("i",{class:"ri-error-warning-line"},null,-1)),J(" "+g(o.value),1)])):j("",!0)])]),_:1}))}}),Ce=K(fe,[["__scopeId","data-v-bcceb68a"]]);export{Ce as default};
