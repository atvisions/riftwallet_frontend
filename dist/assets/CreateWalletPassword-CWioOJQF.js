import{d as E,u as A,v as r,p as F,o as N,c as w,g as l,B as b,z as B,M as x,G as W,E as C,F as m,b as p}from"./auth-tCBxrB_D.js";import{a as M,u as U}from"./preload-helper-IGrWFsVS.js";import{A as L}from"./index-CpkLCnFh.js";import{_ as O}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./chrome-mock-BOlt1wEj.js";const R={class:"create-wallet-password-page"},V={class:"content"},T={class:"password-section"},j={class:"input-group"},z={class:"input-wrapper"},G=["type"],J={key:0,class:"error-message"},$={key:0,class:"error-message"},Y={class:"footer"},q=["disabled"],H={key:0},K={key:1},Q=E({__name:"CreateWalletPassword",setup(X){const f=U(),k=A(),t=M(),i=r(""),g=r(!1),d=r(""),v=r(!1),u=r(""),h=r(""),_=r(""),y=F(()=>i.value.length>=8&&!d.value),P=()=>{f.go(-1)},I=()=>{d.value="",i.value.length>0&&i.value.length<8&&(d.value="Password must be at least 8 characters long")},S=async()=>{if(y.value)try{v.value=!0,u.value="";const e=await(await fetch(`${L.API_BASE_URL}/wallets/verify_mnemonic/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({device_id:k.deviceId,chain:_.value,mnemonic:h.value,payment_password:i.value})})).json();if(e.state==="success"){sessionStorage.removeItem("generated_mnemonic"),sessionStorage.removeItem("selected_chain"),sessionStorage.removeItem("verified_mnemonic"),console.log("🎉 Wallet created successfully:",e),console.log("📊 API response data:",JSON.stringify(e,null,2));const a=e.data;console.log("🆕 Response data from API:",a);let o=null;if(a&&a.wallet?(o=a.wallet,console.log("📦 Found wallet in responseData.wallet:",o)):a&&a.id?(o=a,console.log("📦 Found wallet in responseData directly:",o)):console.warn("❌ Unexpected response structure:",a),t.currentWallet=null,console.log("🔄 Reloading wallet list..."),await t.loadWallets(!1),console.log("📋 Current wallet list after reload:",t.wallets.map(s=>({id:s.id,name:s.name,chain:s.chain,address:s.address.substring(0,10)+"..."}))),o&&o.id){console.log("🔍 Looking for wallet with ID:",o.id);const s=t.wallets.find(c=>c.id===o.id);if(s)console.log("✅ Found created wallet:",s),await t.setCurrentWallet(s),console.log("🎯 New wallet set as current:",s.id,s.chain,s.name);else if(console.warn("❌ Created wallet not found in wallet list"),console.log("🔍 Available wallet IDs:",t.wallets.map(c=>c.id)),t.wallets.length>0){const c=t.wallets[t.wallets.length-1];console.log("📌 Using latest wallet as fallback:",c),await t.setCurrentWallet(c)}}else if(console.warn("❌ No wallet data in response"),console.log("📄 Full response:",e),t.wallets.length>0){const s=t.wallets[t.wallets.length-1];console.log("📌 Using latest wallet as fallback:",s),await t.setCurrentWallet(s)}console.log("🏠 Current wallet before loading balance:",t.currentWallet),t.currentWallet&&(console.log("⏳ Loading wallet balance before redirect..."),await t.loadWalletBalance(t.currentWallet.id),console.log("✅ Wallet balance loaded, redirecting to home")),f.push("/")}else throw new Error(e.message||"Failed to create wallet")}catch(n){u.value=n instanceof Error?n.message:"Failed to create wallet"}finally{v.value=!1}},D=()=>{const n=sessionStorage.getItem("verified_mnemonic"),e=sessionStorage.getItem("selected_chain");if(!n||!e){u.value="Missing wallet creation data. Please start over.";return}h.value=n,_.value=e};return N(()=>{D()}),(n,e)=>(p(),w("div",R,[l("div",{class:"header"},[l("button",{class:"back-btn",onClick:P},e[2]||(e[2]=[l("i",{class:"ri-arrow-left-line"},null,-1)])),e[3]||(e[3]=l("h1",null,"Create Wallet",-1)),e[4]||(e[4]=l("div",{class:"placeholder"},null,-1))]),l("div",V,[e[7]||(e[7]=l("div",{class:"description"},[l("h2",null,"Enter Your Password"),l("p",null,"Enter your payment password to create the wallet with the verified seed phrase.")],-1)),l("div",T,[l("div",j,[e[5]||(e[5]=l("label",{for:"password"},"Payment Password",-1)),l("div",z,[B(l("input",{id:"password","onUpdate:modelValue":e[0]||(e[0]=a=>i.value=a),type:g.value?"text":"password",placeholder:"Enter your password",class:W(["password-input",{error:d.value}]),onInput:I,autofocus:""},null,42,G),[[x,i.value]]),l("button",{type:"button",onClick:e[1]||(e[1]=a=>g.value=!g.value),class:"toggle-password"},[l("i",{class:W(g.value?"ri-eye-off-line":"ri-eye-line")},null,2)])]),d.value?(p(),w("div",J,C(d.value),1)):b("",!0)])]),u.value?(p(),w("div",$,[e[6]||(e[6]=l("i",{class:"ri-error-warning-line"},null,-1)),m(" "+C(u.value),1)])):b("",!0)]),l("div",Y,[l("button",{class:"create-btn",disabled:!y.value||v.value,onClick:S},[v.value?(p(),w("span",H,e[8]||(e[8]=[l("i",{class:"ri-loader-4-line animate-spin"},null,-1),m(" Creating & Loading Wallet... ")]))):(p(),w("span",K,e[9]||(e[9]=[m(" Create Wallet "),l("i",{class:"ri-check-line"},null,-1)])))],8,q)])]))}}),ae=O(Q,[["__scopeId","data-v-0771c375"]]);export{ae as default};
