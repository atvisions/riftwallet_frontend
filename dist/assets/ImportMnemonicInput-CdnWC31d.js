import{d as C,v as r,p as D,o as S,c as n,g as s,B as v,E as p,z as g,D as E,G as w,M,A as P,I as x,J as R,b as l}from"./auth-tCBxrB_D.js";import{u as V}from"./preload-helper-IGrWFsVS.js";import{_ as B}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./chrome-mock-BOlt1wEj.js";import"./index-CpkLCnFh.js";const K={class:"import-mnemonic-input-page"},L={class:"header"},N={class:"content"},A={class:"form-container"},J={key:0,class:"selected-chain-info"},U=["src","alt"],W={class:"chain-details"},$={class:"chain-name"},z={class:"chain-code"},F={class:"form-group"},O={key:0,class:"error-message"},T={class:"form-group"},q={class:"password-input-container"},G=["type"],j={key:0,class:"error-message"},H={key:1,class:"form-group"},Q=["value"],X={key:2,class:"error-message"},Y=["disabled"],Z=C({__name:"ImportMnemonicInput",setup(ee){const y=V(),a=r(null),i=r(""),u=r(""),f=r("0"),h=r(!1),c=r(""),d=r(""),m=r(""),k=D(()=>a.value&&i.value.trim()&&u.value.trim()&&!d.value&&!m.value),_=()=>i.value.trim().split(/\s+/).length!==12?(d.value="Recovery phrase must contain exactly 12 words",!1):(d.value="",!0),I=()=>u.value.length<6?(m.value="Password must be at least 6 characters",!1):(m.value="",!0),b=async()=>{if(!(!_()||!I()))try{c.value="";const o={mnemonic:i.value.trim(),chain:a.value.chain,payment_password:u.value,kadena_chain_id:a.value.chain==="KDA"?f.value:"0"};console.log("Starting mnemonic import with data:",o),console.log("Redirecting to loading page for mnemonic import and balance refresh"),await y.push({name:"WalletImportLoading",query:{importType:"mnemonic",importData:JSON.stringify(o)}})}catch(o){const e=o instanceof Error?o.message:"Import failed";e.toLowerCase().includes("password")?c.value="Incorrect password. Please check your payment password.":e.toLowerCase().includes("mnemonic")?c.value="Invalid recovery phrase. Please check your mnemonic words.":c.value=e,console.error("Import mnemonic error:",o)}};return S(()=>{const o=sessionStorage.getItem("mnemonic_selected_chain");if(o)try{a.value=JSON.parse(o)}catch(e){console.error("Failed to parse chain data:",e),sessionStorage.setItem("import_type","mnemonic"),y.push("/import-private-key-select-chain")}else sessionStorage.setItem("import_type","mnemonic"),y.push("/import-private-key-select-chain");i.value&&_(),u.value&&I()}),(o,e)=>(l(),n("div",K,[s("div",L,[s("button",{onClick:e[0]||(e[0]=t=>o.$router.go(-1)),class:"back-btn"},e[5]||(e[5]=[s("i",{class:"ri-arrow-left-line"},null,-1)])),e[6]||(e[6]=s("h1",null,"Import Recovery Phrase",-1))]),s("div",N,[s("div",A,[a.value?(l(),n("div",J,[s("img",{src:a.value.logo,alt:a.value.name,class:"chain-logo"},null,8,U),s("div",W,[s("span",$,p(a.value.name),1),s("span",z,p(a.value.chain),1)])])):v("",!0),s("div",F,[e[7]||(e[7]=s("label",null,"Recovery Phrase",-1)),e[8]||(e[8]=s("p",{class:"form-hint"},"Enter your 12-word recovery phrase, separated by spaces",-1)),g(s("textarea",{"onUpdate:modelValue":e[1]||(e[1]=t=>i.value=t),class:w(["mnemonic-input",{error:d.value}]),placeholder:"Enter your 12-word recovery phrase...",rows:"4"},null,2),[[E,i.value]]),d.value?(l(),n("div",O,p(d.value),1)):v("",!0)]),s("div",T,[e[9]||(e[9]=s("label",null,"Payment Password",-1)),e[10]||(e[10]=s("p",{class:"form-hint"},"Enter your payment password to protect the wallet",-1)),s("div",q,[g(s("input",{"onUpdate:modelValue":e[2]||(e[2]=t=>u.value=t),type:h.value?"text":"password",class:w(["password-input",{error:m.value}]),placeholder:"Enter payment password"},null,10,G),[[M,u.value]]),s("button",{type:"button",class:"password-toggle",onClick:e[3]||(e[3]=t=>h.value=!h.value)},[s("i",{class:w(h.value?"ri-eye-off-line":"ri-eye-line")},null,2)])]),m.value?(l(),n("div",j,p(m.value),1)):v("",!0)]),a.value?.chain==="KDA"?(l(),n("div",H,[e[11]||(e[11]=s("label",null,"Kadena Chain ID",-1)),e[12]||(e[12]=s("p",{class:"form-hint"},"Select the Kadena chain ID (0-19)",-1)),g(s("select",{"onUpdate:modelValue":e[4]||(e[4]=t=>f.value=t),class:"kadena-select"},[(l(),n(x,null,R(20,t=>s("option",{key:t-1,value:(t-1).toString()}," Chain "+p(t-1),9,Q)),64))],512),[[P,f.value]])])):v("",!0),c.value?(l(),n("div",X,p(c.value),1)):v("",!0),s("button",{class:"import-btn",disabled:!k.value,onClick:b}," Import Wallet ",8,Y)])])]))}}),ne=B(Z,[["__scopeId","data-v-3f2b1b92"]]);export{ne as default};
