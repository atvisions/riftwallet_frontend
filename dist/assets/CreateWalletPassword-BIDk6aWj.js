import{d as N,u as B,r,c as E,o as F,g as x,F as v,f as w,i as t,e as m,C as b,A as L,N as R,n as k,G as P,L as f}from"./auth-Vb-AA__w.js";import{a as U,u as M}from"./preload-helper-DQNYPBmD.js";import{A as O}from"./chrome-mock-DxZfNgLw.js";import{R as V}from"./ResponsiveLayout-D_dkxory.js";import{_ as T}from"./_plugin-vue_export-helper-DlAUqK2U.js";const j={class:"page-content"},G={class:"password-section"},J={class:"input-group"},$={class:"input-wrapper"},z=["type"],Y={key:0,class:"error-message"},q={key:0,class:"error-message"},H={class:"footer"},K=["disabled"],Q={key:0},X={key:1},Z=N({__name:"CreateWalletPassword",setup(ee){const h=M(),I=B(),l=U(),i=r(""),p=r(!1),c=r(""),g=r(!1),u=r(""),_=r(""),y=r(""),C=E(()=>i.value.length>=8&&!c.value),W=()=>{h.go(-1)},S=()=>{c.value="",i.value.length>0&&i.value.length<8&&(c.value="Password must be at least 8 characters long")},D=async()=>{if(C.value)try{g.value=!0,u.value="";const e=await(await fetch(`${O.API_BASE_URL}/wallets/verify_mnemonic/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({device_id:I.deviceId,chain:y.value,mnemonic:_.value,payment_password:i.value})})).json();if(e.state==="success"){sessionStorage.removeItem("generated_mnemonic"),sessionStorage.removeItem("selected_chain"),sessionStorage.removeItem("verified_mnemonic"),console.log("🎉 Wallet created successfully:",e),console.log("📊 API response data:",JSON.stringify(e,null,2));const s=e.data;console.log("🆕 Response data from API:",s);let o=null;if(s&&s.wallet?(o=s.wallet,console.log("📦 Found wallet in responseData.wallet:",o)):s&&s.id?(o=s,console.log("📦 Found wallet in responseData directly:",o)):console.warn("❌ Unexpected response structure:",s),l.currentWallet=null,console.log("🔄 Reloading wallet list..."),await l.loadWallets(!1),console.log("📋 Current wallet list after reload:",l.wallets.map(a=>({id:a.id,name:a.name,chain:a.chain,address:a.address.substring(0,10)+"..."}))),o&&o.id){console.log("🔍 Looking for wallet with ID:",o.id);const a=l.wallets.find(d=>d.id===o.id);if(a)console.log("✅ Found created wallet:",a),await l.setCurrentWallet(a),console.log("🎯 New wallet set as current:",a.id,a.chain,a.name);else if(console.warn("❌ Created wallet not found in wallet list"),console.log("🔍 Available wallet IDs:",l.wallets.map(d=>d.id)),l.wallets.length>0){const d=l.wallets[l.wallets.length-1];console.log("📌 Using latest wallet as fallback:",d),await l.setCurrentWallet(d)}}else if(console.warn("❌ No wallet data in response"),console.log("📄 Full response:",e),l.wallets.length>0){const a=l.wallets[l.wallets.length-1];console.log("📌 Using latest wallet as fallback:",a),await l.setCurrentWallet(a)}console.log("🏠 Current wallet before loading balance:",l.currentWallet),l.currentWallet&&(console.log("⏳ Loading wallet balance before redirect..."),await l.loadWalletBalance(l.currentWallet.id),console.log("✅ Wallet balance loaded, redirecting to home")),h.push("/")}else throw new Error(e.message||"Failed to create wallet")}catch(n){u.value=n instanceof Error?n.message:"Failed to create wallet"}finally{g.value=!1}},A=()=>{const n=sessionStorage.getItem("verified_mnemonic"),e=sessionStorage.getItem("selected_chain");if(!n||!e){u.value="Missing wallet creation data. Please start over.";return}_.value=n,y.value=e};return F(()=>{A()}),(n,e)=>(w(),x(V,{title:"Create Wallet","show-header":!0,"show-footer":!0,scrollable:!0,onBack:W},{header:v(()=>[t("div",{class:"page-header"},[t("div",{class:"header-left"},[t("button",{onClick:W,class:"back-button"},e[2]||(e[2]=[t("i",{class:"ri-arrow-left-line"},null,-1)])),e[3]||(e[3]=t("h1",{class:"header-title"},"Create Wallet",-1))])])]),footer:v(()=>[t("div",H,[t("button",{class:"create-btn",disabled:!C.value||g.value,onClick:D},[g.value?(w(),m("span",Q,e[7]||(e[7]=[t("i",{class:"ri-loader-4-line animate-spin"},null,-1),f(" Creating & Loading Wallet... ")]))):(w(),m("span",X,e[8]||(e[8]=[f(" Create Wallet "),t("i",{class:"ri-check-line"},null,-1)])))],8,K)])]),default:v(()=>[t("div",j,[e[6]||(e[6]=t("div",{class:"description"},[t("h2",null,"Enter Your Password"),t("p",null,"Enter your payment password to create the wallet with the verified seed phrase.")],-1)),t("div",G,[t("div",J,[e[4]||(e[4]=t("label",{for:"password"},"Payment Password",-1)),t("div",$,[L(t("input",{id:"password","onUpdate:modelValue":e[0]||(e[0]=s=>i.value=s),type:p.value?"text":"password",placeholder:"Enter your password",class:k(["password-input",{error:c.value}]),onInput:S,autofocus:""},null,42,z),[[R,i.value]]),t("button",{type:"button",onClick:e[1]||(e[1]=s=>p.value=!p.value),class:"toggle-password"},[t("i",{class:k(p.value?"ri-eye-off-line":"ri-eye-line")},null,2)])]),c.value?(w(),m("div",Y,P(c.value),1)):b("",!0)]),u.value?(w(),m("div",q,[e[5]||(e[5]=t("i",{class:"ri-error-warning-line"},null,-1)),f(" "+P(u.value),1)])):b("",!0)])])]),_:1}))}}),ne=T(Z,[["__scopeId","data-v-d8820759"]]);export{ne as default};
