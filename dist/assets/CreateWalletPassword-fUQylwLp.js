import{d as E,u as A,r,q as B,o as F,f as N,E as b,e as w,h as a,c as g,B as W,z as L,L as U,F as C,G as P,J as v}from"./auth-B5jpq_BM.js";import{a as M,u as O}from"./preload-helper-BHn8pG3Y.js";import{A as R}from"./index-DSub5CB9.js";import{P as V}from"./PageContainer-Qetv8PV3.js";import{_ as J}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./chrome-mock-BLIE_U1K.js";const T={class:"password-section"},j={class:"input-group"},z={class:"input-wrapper"},G=["type"],$={key:0,class:"error-message"},q={key:0,class:"error-message"},Y={class:"footer"},H=["disabled"],K={key:0},Q={key:1},X=E({__name:"CreateWalletPassword",setup(Z){const f=O(),k=A(),t=M(),i=r(""),p=r(!1),c=r(""),m=r(!1),u=r(""),h=r(""),_=r(""),y=B(()=>i.value.length>=8&&!c.value),I=()=>{f.go(-1)},S=()=>{c.value="",i.value.length>0&&i.value.length<8&&(c.value="Password must be at least 8 characters long")},x=async()=>{if(y.value)try{m.value=!0,u.value="";const e=await(await fetch(`${R.API_BASE_URL}/wallets/verify_mnemonic/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({device_id:k.deviceId,chain:_.value,mnemonic:h.value,payment_password:i.value})})).json();if(e.state==="success"){sessionStorage.removeItem("generated_mnemonic"),sessionStorage.removeItem("selected_chain"),sessionStorage.removeItem("verified_mnemonic"),console.log("🎉 Wallet created successfully:",e),console.log("📊 API response data:",JSON.stringify(e,null,2));const s=e.data;console.log("🆕 Response data from API:",s);let o=null;if(s&&s.wallet?(o=s.wallet,console.log("📦 Found wallet in responseData.wallet:",o)):s&&s.id?(o=s,console.log("📦 Found wallet in responseData directly:",o)):console.warn("❌ Unexpected response structure:",s),t.currentWallet=null,console.log("🔄 Reloading wallet list..."),await t.loadWallets(!1),console.log("📋 Current wallet list after reload:",t.wallets.map(l=>({id:l.id,name:l.name,chain:l.chain,address:l.address.substring(0,10)+"..."}))),o&&o.id){console.log("🔍 Looking for wallet with ID:",o.id);const l=t.wallets.find(d=>d.id===o.id);if(l)console.log("✅ Found created wallet:",l),await t.setCurrentWallet(l),console.log("🎯 New wallet set as current:",l.id,l.chain,l.name);else if(console.warn("❌ Created wallet not found in wallet list"),console.log("🔍 Available wallet IDs:",t.wallets.map(d=>d.id)),t.wallets.length>0){const d=t.wallets[t.wallets.length-1];console.log("📌 Using latest wallet as fallback:",d),await t.setCurrentWallet(d)}}else if(console.warn("❌ No wallet data in response"),console.log("📄 Full response:",e),t.wallets.length>0){const l=t.wallets[t.wallets.length-1];console.log("📌 Using latest wallet as fallback:",l),await t.setCurrentWallet(l)}console.log("🏠 Current wallet before loading balance:",t.currentWallet),t.currentWallet&&(console.log("⏳ Loading wallet balance before redirect..."),await t.loadWalletBalance(t.currentWallet.id),console.log("✅ Wallet balance loaded, redirecting to home")),f.push("/")}else throw new Error(e.message||"Failed to create wallet")}catch(n){u.value=n instanceof Error?n.message:"Failed to create wallet"}finally{m.value=!1}},D=()=>{const n=sessionStorage.getItem("verified_mnemonic"),e=sessionStorage.getItem("selected_chain");if(!n||!e){u.value="Missing wallet creation data. Please start over.";return}h.value=n,_.value=e};return F(()=>{D()}),(n,e)=>(w(),N(V,{title:"Create Wallet","show-header":!0,"show-footer":!0,"show-back-button":!0,"custom-back-action":I,"max-width":"420px",padding:"24px",centered:!0},{footer:b(()=>[a("div",Y,[a("button",{class:"create-btn",disabled:!y.value||m.value,onClick:x},[m.value?(w(),g("span",K,e[4]||(e[4]=[a("i",{class:"ri-loader-4-line animate-spin"},null,-1),v(" Creating & Loading Wallet... ")]))):(w(),g("span",Q,e[5]||(e[5]=[v(" Create Wallet "),a("i",{class:"ri-check-line"},null,-1)])))],8,H)])]),default:b(()=>[e[6]||(e[6]=a("div",{class:"description"},[a("h2",null,"Enter Your Password"),a("p",null,"Enter your payment password to create the wallet with the verified seed phrase.")],-1)),a("div",T,[a("div",j,[e[2]||(e[2]=a("label",{for:"password"},"Payment Password",-1)),a("div",z,[L(a("input",{id:"password","onUpdate:modelValue":e[0]||(e[0]=s=>i.value=s),type:p.value?"text":"password",placeholder:"Enter your password",class:C(["password-input",{error:c.value}]),onInput:S,autofocus:""},null,42,G),[[U,i.value]]),a("button",{type:"button",onClick:e[1]||(e[1]=s=>p.value=!p.value),class:"toggle-password"},[a("i",{class:C(p.value?"ri-eye-off-line":"ri-eye-line")},null,2)])]),c.value?(w(),g("div",$,P(c.value),1)):W("",!0)])]),u.value?(w(),g("div",q,[e[3]||(e[3]=a("i",{class:"ri-error-warning-line"},null,-1)),v(" "+P(u.value),1)])):W("",!0)]),_:1,__:[6]}))}}),ne=J(X,[["__scopeId","data-v-4d4b58a5"]]);export{ne as default};
