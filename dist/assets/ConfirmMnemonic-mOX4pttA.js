import{d as x,u as M,v as n,p as I,o as N,e as S,L as V,b as i,g as a,c as d,B,J as E,z as L,E as u,D as T,I as A,F as p}from"./auth-tCBxrB_D.js";import{a as D,u as F}from"./preload-helper-IGrWFsVS.js";import{R}from"./ResponsiveLayout-BQBtD7HK.js";import{_ as W}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./chrome-mock-BOlt1wEj.js";import"./index-CpkLCnFh.js";const $={class:"confirm-mnemonic-container"},U={class:"content-area"},j={class:"mnemonic-input"},z={class:"word-grid"},J=["onUpdate:modelValue","placeholder"],Y={class:"input-actions"},q=["disabled"],G={key:0,class:"ri-loader-4-line animate-spin"},H={key:1,class:"ri-clipboard-line"},K={key:0,class:"error-message"},O={class:"bottom-section"},Q=["disabled"],X=x({__name:"ConfirmMnemonic",setup(Z){const m=F();M(),D();const s=n(Array(12).fill(""));n(!1);const l=n(!1),t=n(""),v=n(""),b=n(""),f=I(()=>s.value.every(o=>o.trim().length>0)),g=()=>{m.go(-1)},h=()=>{t.value=""},_=async()=>{if(!l.value)try{if(l.value=!0,t.value="",!navigator.clipboard){try{const e=document.createElement("textarea");e.style.position="fixed",e.style.left="-999999px",e.style.top="-999999px",document.body.appendChild(e),e.focus(),document.execCommand("paste");const r=e.value;document.body.removeChild(e),r?y(r):t.value="No text found in clipboard. Please copy your seed phrase first."}catch{t.value="Clipboard access not available. Please type your seed phrase manually."}return}const o=await navigator.clipboard.readText();y(o)}catch(o){console.error("Clipboard error:",o),o.name==="NotAllowedError"?t.value="Clipboard access denied. Please allow clipboard permissions or type manually.":o.name==="NotFoundError"?t.value="No text found in clipboard. Please copy your seed phrase first.":t.value="Failed to read from clipboard. Please type your seed phrase manually."}finally{l.value=!1}},y=o=>{if(!o||!o.trim()){t.value="No text found in clipboard. Please copy your seed phrase first.";return}const e=o.trim().split(/\s+/).filter(r=>r.length>0);e.length===12?(s.value=e.map(r=>r.toLowerCase().trim()),h(),setTimeout(()=>{t.value},100)):e.length>12?t.value=`Too many words (${e.length}). Please paste exactly 12 words.`:e.length>0?t.value=`Not enough words (${e.length}). Please paste exactly 12 words.`:t.value="Invalid seed phrase format. Please paste 12 words separated by spaces."},w=()=>{s.value=Array(12).fill(""),t.value=""},C=()=>{if(f.value)try{t.value="";const o=s.value.join(" ").toLowerCase(),e=v.value.toLowerCase();if(o!==e){t.value="The seed phrase you entered does not match. Please try again.";return}sessionStorage.setItem("verified_mnemonic",o),m.push("/create-wallet-password")}catch(o){t.value=o instanceof Error?o.message:"Verification failed"}},P=()=>{const o=sessionStorage.getItem("generated_mnemonic"),e=sessionStorage.getItem("selected_chain");o&&e?(v.value=o,b.value=e):t.value="No mnemonic data found. Please go back and start over."};return N(()=>{P()}),(o,e)=>(i(),S(R,{title:"Confirm Seed Phrase","show-header":!0,"show-footer":!1,"show-back-button":!0,scrollable:!0,padding:"0",onBack:g},{default:V(()=>[a("div",$,[a("div",U,[e[2]||(e[2]=a("div",{class:"description"},[a("h2",null,"Verify Your Seed Phrase"),a("p",null,"Please enter your 12-word seed phrase to confirm you've saved it correctly.")],-1)),a("div",j,[a("div",z,[(i(!0),d(A,null,E(s.value,(r,c)=>(i(),d("div",{key:c,class:"word-input-container"},[a("label",null,u(c+1),1),L(a("input",{"onUpdate:modelValue":k=>s.value[c]=k,type:"text",placeholder:`Word ${c+1}`,class:"word-input",onInput:h,autocomplete:"off",spellcheck:"false"},null,40,J),[[T,s.value[c]]])]))),128))]),a("div",Y,[a("button",{class:"paste-btn",onClick:_,disabled:l.value},[l.value?(i(),d("i",G)):(i(),d("i",H)),p(" "+u(l.value?"Pasting...":"Paste from Clipboard"),1)],8,q),a("button",{class:"clear-btn",onClick:w},e[0]||(e[0]=[a("i",{class:"ri-delete-bin-line"},null,-1),p(" Clear All ")]))])]),t.value?(i(),d("div",K,[e[1]||(e[1]=a("i",{class:"ri-error-warning-line"},null,-1)),p(" "+u(t.value),1)])):B("",!0)]),a("div",O,[a("button",{class:"confirm-btn",disabled:!f.value,onClick:C},e[3]||(e[3]=[a("span",null,"Continue",-1),a("i",{class:"ri-arrow-right-line"},null,-1)]),8,Q)])])]),_:1}))}}),le=W(X,[["__scopeId","data-v-f5b764e5"]]);export{le as default};
