import{d as B,u as E,r,c as F,o as N,g as x,F as h,f as w,i as t,e as v,C as P,A as R,M as V,n as k,G as S,J as y}from"./auth-DRfzTYJF.js";import{a as L,u as M}from"./preload-helper-DtVLuan9.js";import{A as U}from"./chrome-mock-0jeXDaAI.js";import{R as O}from"./ResponsiveLayout-NikCG07L.js";import{_ as J}from"./_plugin-vue_export-helper-DlAUqK2U.js";const T={class:"page-content"},j={class:"password-section"},G={class:"input-group"},$={class:"input-wrapper"},z=["type"],Y={key:0,class:"error-message"},q={key:0,class:"error-message"},H={class:"footer"},K=["disabled"],Q={key:0},X={key:1},Z=B({__name:"CreateWalletPassword",setup(ee){const f=M(),p=E(),a=L(),i=r(""),g=r(!1),c=r(""),m=r(!1),u=r(""),_=r(""),W=r(""),C=F(()=>i.value.length>=8&&!c.value),b=()=>{f.go(-1)},I=()=>{c.value="",i.value.length>0&&i.value.length<8&&(c.value="Password must be at least 8 characters long")},A=async()=>{if(C.value)try{m.value=!0,u.value="";const e=await(await fetch(`${U.API_BASE_URL}/wallets/verify_mnemonic/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({device_id:p.deviceId,chain:W.value,mnemonic:_.value,payment_password:i.value})})).json();if(e.state==="success"){sessionStorage.removeItem("generated_mnemonic"),sessionStorage.removeItem("selected_chain"),sessionStorage.removeItem("verified_mnemonic"),console.log("🎉 Wallet created successfully:",e),console.log("📊 API response data:",JSON.stringify(e,null,2));const s=e.data;console.log("🆕 Response data from API:",s);let o=null;if(s&&s.wallet?(o=s.wallet,console.log("📦 Found wallet in responseData.wallet:",o)):s&&s.id?(o=s,console.log("📦 Found wallet in responseData directly:",o)):console.warn("❌ Unexpected response structure:",s),console.log("🔄 Reloading wallet list..."),await a.loadWallets(!1),console.log("📋 Current wallet list after reload:",a.wallets.map(l=>({id:l.id,name:l.name,chain:l.chain,address:l.address.substring(0,10)+"..."}))),o&&o.id){console.log("🔍 Looking for wallet with ID:",o.id);const l=a.wallets.find(d=>d.id===o.id);if(l)console.log("✅ Found created wallet:",l),await a.setCurrentWallet(l),console.log("🎯 New wallet set as current:",l.id,l.chain,l.name);else if(console.warn("❌ Created wallet not found in wallet list"),console.log("🔍 Available wallet IDs:",a.wallets.map(d=>d.id)),a.wallets.length>0){const d=a.wallets[a.wallets.length-1];console.log("📌 Using latest wallet as fallback:",d),await a.setCurrentWallet(d)}}else if(console.warn("❌ No wallet data in response"),console.log("📄 Full response:",e),a.wallets.length>0){const l=a.wallets[a.wallets.length-1];console.log("📌 Using latest wallet as fallback:",l),await a.setCurrentWallet(l)}console.log("🏠 Current wallet before loading balance:",a.currentWallet),a.currentWallet&&typeof a.currentWallet.id=="number"&&(console.log("⏳ Loading wallet balance before redirect..."),await a.loadWalletBalance(a.currentWallet.id),console.log("✅ Wallet balance loaded, redirecting to home")),console.log("🏠 准备跳转到首页"),console.log("🔐 跳转前的认证状态:",{isAuthenticated:p.isAuthenticated,hasPaymentPassword:p.hasPaymentPassword,isPasswordSessionValid:p.isPasswordSessionValid}),console.log("📱 跳转前的钱包状态:",{walletsCount:a.wallets.length,currentWallet:a.currentWallet?.id}),await f.push("/"),console.log("✅ 路由跳转完成，当前路径:",f.currentRoute.value.path)}else throw new Error(e.message||"Failed to create wallet")}catch(n){u.value=n instanceof Error?n.message:"Failed to create wallet"}finally{m.value=!1}},D=()=>{const n=sessionStorage.getItem("verified_mnemonic"),e=sessionStorage.getItem("selected_chain");if(!n||!e){u.value="Missing wallet creation data. Please start over.";return}_.value=n,W.value=e};return N(()=>{D()}),(n,e)=>(w(),x(O,{title:"Create Wallet","show-header":!0,"show-footer":!0,scrollable:!0,onBack:b},{header:h(()=>[t("div",{class:"page-header"},[t("div",{class:"header-left"},[t("button",{onClick:b,class:"back-button"},e[2]||(e[2]=[t("i",{class:"ri-arrow-left-line"},null,-1)])),e[3]||(e[3]=t("h1",{class:"header-title"},"Create Wallet",-1))])])]),footer:h(()=>[t("div",H,[t("button",{class:"create-btn",disabled:!C.value||m.value,onClick:A},[m.value?(w(),v("span",Q,e[7]||(e[7]=[t("i",{class:"ri-loader-4-line animate-spin"},null,-1),y(" Creating & Loading Wallet... ")]))):(w(),v("span",X,e[8]||(e[8]=[y(" Create Wallet "),t("i",{class:"ri-check-line"},null,-1)])))],8,K)])]),default:h(()=>[t("div",T,[e[6]||(e[6]=t("div",{class:"description"},[t("h2",null,"Enter Your Password"),t("p",null,"Enter your payment password to create the wallet with the verified seed phrase.")],-1)),t("div",j,[t("div",G,[e[4]||(e[4]=t("label",{for:"password"},"Payment Password",-1)),t("div",$,[R(t("input",{id:"password","onUpdate:modelValue":e[0]||(e[0]=s=>i.value=s),type:g.value?"text":"password",placeholder:"Enter your password",class:k(["password-input",{error:c.value}]),onInput:I,autofocus:""},null,42,z),[[V,i.value]]),t("button",{type:"button",onClick:e[1]||(e[1]=s=>g.value=!g.value),class:"toggle-password"},[t("i",{class:k(g.value?"ri-eye-off-line":"ri-eye-line")},null,2)])]),c.value?(w(),v("div",Y,S(c.value),1)):P("",!0)]),u.value?(w(),v("div",q,[e[5]||(e[5]=t("i",{class:"ri-error-warning-line"},null,-1)),y(" "+S(u.value),1)])):P("",!0)])])]),_:1}))}}),ne=J(Z,[["__scopeId","data-v-a50cd9e2"]]);export{ne as default};
