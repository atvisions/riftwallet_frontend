import{d as B,u as D,r as d,q as P,o as L,f as F,E as C,e as r,h as a,c,B as U,I as $,H as j,G as f,z as k,D as I,J as O}from"./auth-B5jpq_BM.js";import{a as R,u as q}from"./preload-helper-BHn8pG3Y.js";import{A as G}from"./index-DSub5CB9.js";import{P as J}from"./PageContainer-Qetv8PV3.js";import{_ as z}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./chrome-mock-BLIE_U1K.js";const H={class:"confirm-container"},Y={class:"input-section"},K={class:"word-grid"},Q={class:"word-number"},X=["onUpdate:modelValue","placeholder"],Z={class:"action-buttons"},ee=["disabled"],ae={key:0,class:"ri-loader-4-line animate-spin"},te={key:1,class:"ri-clipboard-line"},se={class:"password-section"},oe={class:"password-inputs"},le={class:"input-group"},ne={key:0,class:"error-message"},re={class:"bottom-section"},ie=["disabled"],de={key:0,class:"ri-loader-4-line animate-spin"},ce={key:1,class:"ri-add-line"},ue=B({__name:"ConfirmMnemonic",setup(pe){const w=q(),N=D(),l=R(),i=d(Array(12).fill("")),u=d(""),m=d(!1),p=d(!1),t=d(""),g=d(""),h=d(""),y=P(()=>i.value.every(s=>s.trim().length>0)),_=P(()=>u.value.length>=6),S=()=>{w.go(-1)},b=()=>{t.value=""},W=()=>{if(t.value="",u.value.length>0&&u.value.length<6){t.value="Password must be at least 6 characters";return}},E=async()=>{if(!p.value)try{if(p.value=!0,t.value="",!navigator.clipboard){t.value="Clipboard API not supported. Please type your seed phrase manually.";return}try{if((await navigator.permissions.query({name:"clipboard-read"})).state==="denied"){t.value="Clipboard access denied. Please allow clipboard permissions in your browser settings or type manually.";return}}catch{console.log("Permission check not supported, proceeding with clipboard read")}const s=await navigator.clipboard.readText();x(s)}catch(s){console.error("Clipboard error:",s),s.name==="NotAllowedError"?t.value="Clipboard access denied. Please allow clipboard permissions or type manually.":s.name==="NotFoundError"?t.value="No text found in clipboard. Please copy your seed phrase first.":s.name==="SecurityError"?t.value="Clipboard access blocked by security policy. Please type your seed phrase manually.":t.value="Failed to read from clipboard. Please type your seed phrase manually."}finally{p.value=!1}},x=s=>{if(!s||!s.trim()){t.value="No text found in clipboard. Please copy your seed phrase first.";return}const e=s.trim().split(/\s+/).filter(n=>n.length>0);e.length===12?(i.value=e.map(n=>n.toLowerCase().trim()),b(),setTimeout(()=>{t.value},100)):e.length>12?t.value=`Too many words (${e.length}). Please paste exactly 12 words.`:e.length>0?t.value=`Not enough words (${e.length}). Please paste exactly 12 words.`:t.value="Invalid seed phrase format. Please paste 12 words separated by spaces."},M=()=>{i.value=Array(12).fill(""),t.value=""},V=async()=>{if(!(!y.value||!_.value))try{t.value="",m.value=!0;const s=i.value.join(" ").toLowerCase(),e=g.value.toLowerCase();if(s!==e){t.value="The seed phrase you entered does not match. Please try again.";return}const n=await fetch(`${G.API_BASE_URL}/wallets/verify_mnemonic/`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({device_id:N.deviceId,chain:h.value,mnemonic:s,payment_password:u.value})}),o=await n.json();if(!n.ok||o.state!=="success")throw new Error(o.message||"Failed to verify mnemonic");if(o.data&&o.data.success)if(console.log("✅ Wallet verification successful, reloading wallets..."),await l.loadWallets(),console.log("📋 Wallets loaded:",l.wallets.length),l.wallets.length>0){if(o.data.wallet&&o.data.wallet.id){console.log("🔍 Looking for wallet with ID:",o.data.wallet.id);const v=l.wallets.find(T=>T.id===o.data.wallet.id);v?(console.log("✅ Found new wallet, setting as current:",v.name),await l.setCurrentWallet(v)):(console.log("❌ New wallet not found, selecting first wallet"),await l.setCurrentWallet(l.wallets[0]))}else console.log("📝 No wallet ID in response, selecting first wallet"),await l.setCurrentWallet(l.wallets[0]);console.log("🎯 Current wallet set:",l.currentWallet?.name)}else console.log("❌ No wallets found after reload");sessionStorage.removeItem("generated_mnemonic"),sessionStorage.removeItem("selected_chain"),console.log("🧹 Temporary data cleared"),console.log("🚀 Navigating to home page..."),w.push("/"),console.log("✅ Navigation initiated")}catch(s){t.value=s instanceof Error?s.message:"Verification failed"}finally{m.value=!1}},A=()=>{const s=sessionStorage.getItem("generated_mnemonic"),e=sessionStorage.getItem("selected_chain");s&&e?(g.value=s,h.value=e):t.value="No mnemonic data found. Please go back and start over."};return L(()=>{A()}),(s,e)=>(r(),F(J,{title:"Confirm Seed Phrase","show-header":!0,"show-footer":!0,"show-back-button":!0,"custom-back-action":S,"max-width":"480px",padding:"20px",centered:!0},{footer:C(()=>[a("div",re,[a("button",{class:"confirm-btn",disabled:!y.value||!_.value||m.value,onClick:V},[m.value?(r(),c("i",de)):(r(),c("i",ce)),a("span",null,f(m.value?"Creating Wallet...":"Create Wallet"),1)],8,ie)])]),default:C(()=>[a("div",H,[e[2]||(e[2]=a("div",{class:"header-section"},[a("h2",null,"Verify Recovery Phrase"),a("p",null,"Enter your 12-word recovery phrase to confirm you've saved it correctly.")],-1)),a("div",Y,[a("div",K,[(r(!0),c(j,null,$(i.value,(n,o)=>(r(),c("div",{key:o,class:"word-input-item"},[a("span",Q,f(o+1),1),k(a("input",{"onUpdate:modelValue":v=>i.value[o]=v,type:"text",placeholder:`Word ${o+1}`,class:"word-input",onInput:b,autocomplete:"off",spellcheck:"false"},null,40,X),[[I,i.value[o]]])]))),128))]),a("div",Z,[a("button",{class:"paste-btn",onClick:E,disabled:p.value},[p.value?(r(),c("i",ae)):(r(),c("i",te)),a("span",null,f(p.value?"Pasting...":"Paste from Clipboard"),1)],8,ee),a("button",{class:"clear-btn",onClick:M},e[1]||(e[1]=[a("i",{class:"ri-delete-bin-line"},null,-1),a("span",null,"Clear All",-1)]))])])]),a("div",se,[e[4]||(e[4]=a("h3",null,"Verify Your Password",-1)),e[5]||(e[5]=a("p",null,"Enter your wallet password to create the wallet",-1)),a("div",oe,[a("div",le,[e[3]||(e[3]=a("label",null,"Password",-1)),k(a("input",{"onUpdate:modelValue":e[0]||(e[0]=n=>u.value=n),type:"password",placeholder:"Enter your wallet password",class:"password-input",onInput:W},null,544),[[I,u.value]])])])]),t.value?(r(),c("div",ne,[e[6]||(e[6]=a("i",{class:"ri-error-warning-line"},null,-1)),O(" "+f(t.value),1)])):U("",!0)]),_:1}))}}),ye=z(ue,[["__scopeId","data-v-9843bf6f"]]);export{ye as default};
