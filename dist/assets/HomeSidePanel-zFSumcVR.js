import{a as oe,u as le}from"./preload-helper-DW6y3PHv.js";import{d as ie,u as re,r as h,c as k,o as ce,a as ue,g as de,F as I,y as ve,f as d,i as t,e as g,C as _,n as b,G as c,h as m,H as ge,I as me,m as U}from"./auth-DRfzTYJF.js";import{A as fe,f as P,e as V}from"./chrome-mock-0jeXDaAI.js";import{R as pe}from"./ResponsiveLayout-NikCG07L.js";import{B as he,T as _e}from"./BottomNavigation-4q3tCCJr.js";import{_ as be}from"./_plugin-vue_export-helper-DlAUqK2U.js";const ye={class:"home-content"},ke={class:"tips-content"},we={class:"tips-icon"},Te={key:0,class:"loading-spinner"},Se={class:"tips-info"},Ce={class:"tips-title"},Ie={class:"tips-message"},Pe={class:"tips-details"},Be={key:0,class:"tips-countdown"},Le={class:"balance-card"},We={class:"balance-header"},$e=["disabled"],Fe={class:"balance-amount"},Ne={class:"change-amount"},He={class:"change-percentage"},Ae={class:"action-buttons"},Oe={class:"tokens-section"},Ee={class:"section-header"},Re={class:"section-tabs"},Me={key:0,class:"token-list"},Ue=["onClick"],Ve={class:"token-info"},ze={class:"token-logo-container"},De={class:"token-logo-fallback"},Ge={class:"token-symbol"},je=["src","alt","onError","onLoad"],Je={class:"token-details"},qe={class:"token-name"},xe={class:"token-value"},Ke={class:"token-balance"},Qe={class:"token-amount"},Xe={key:0,class:"loading-state"},Ye={key:1,class:"empty-state"},Ze={key:1,class:"nft-list"},ea=ie({__name:"HomeSidePanel",setup(aa){const T=le(),o=oe(),w=re(),S=h(!0),f=h(!1),y=h("tokens"),s=h(null),v=h(null),C=h(3),p=h(null),r=k(()=>o.currentWallet),B=k(()=>{const a=o.currentWalletTokens;return console.log("🔄 Tokens computed property updated:",a.length,"tokens"),a}),z=k(()=>{const a=o.totalBalance;return console.log("🔄 Total balance computed property updated:",a),a}),L=k(()=>{if(!r.value)return null;const a=o.balances[r.value.id];return console.log("🔄 Current wallet balance computed property updated:",a),a}),D=k(()=>L.value?.total_value_change_24h||"0"),W=k(()=>L.value?.total_change_percentage||"0"),G=(a,e)=>{const n=parseFloat(a);return n===0?"0":n<.01?"<0.01":n.toLocaleString(void 0,{maximumFractionDigits:6})},$=a=>{const e=parseFloat(a);return e>0?"positive":e<0?"negative":"neutral"},j=a=>a.logo_url&&!a.imageError?a.logo_url:[`https://www.riftwallet.io/media/token_logos/${a.symbol.toLowerCase()}.png`,`https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${a.token_address}/logo.png`,`https://assets.coingecko.com/coins/images/1/large/${a.symbol.toLowerCase()}.png`][0],J=(a,e)=>{console.log("Image error for token:",e.symbol,"URL:",a.target.src),e.imageError=!0},q=(a,e)=>{console.log("Image loaded for token:",e.symbol),e.imageError=!1},x=a=>{console.log("Selected token:",a)},K=async()=>{if(!(!r.value||f.value))try{f.value=!0,console.log("Refreshing wallet balance:",r.value.id);const a=Date.now();await o.refreshWalletBalance(r.value.id);const e=Date.now()-a;e<500&&await new Promise(n=>setTimeout(n,500-e)),console.log("Wallet balance refreshed successfully")}catch(a){console.error("Failed to refresh wallet balance:",a)}finally{f.value=!1}},Q=async()=>{if(!(!s.value||!r.value)){console.log("🔄 Starting transaction status polling:",{transaction_id:s.value.transaction_id,transaction_hash:s.value.transaction_hash,current_status:s.value.status,from_address:s.value.from_address,to_address:s.value.to_address,amount:s.value.amount,token_symbol:s.value.token_symbol});try{const a=s.value.transaction_id,e=s.value.transaction_hash,n=await fetch(`${fe.API_BASE_URL}/wallets/${r.value.id}/transaction_history/`,{method:"GET",headers:{"Content-Type":"application/json"}});if(n.ok){const u=await n.json();console.log("Complete API response data:",u),console.log("Transaction list:",u.transactions),console.log("Current pending transaction info:",s.value);let i=null;if(a&&(i=u.transactions?.find(l=>l.id===a),console.log(`Found transaction by transaction_id ${a}:`,i)),!i&&e&&!e.startsWith("pending_")&&(i=u.transactions?.find(l=>l.hash===e),console.log(`Found transaction by hash ${e}:`,i)),!i&&e&&e.startsWith("pending_")&&(console.log("Attempting to match by amount and address, search criteria:",{from_address:s.value.from_address,to_address:s.value.to_address,amount:s.value.amount,token_symbol:s.value.token_symbol}),i=u.transactions?.find(l=>{const A=l.token_symbol===s.value.token_symbol||l.token_symbol==="SOL"&&s.value.token_symbol==="SOLPHIN"||l.token_symbol==="SOLPHIN"&&s.value.token_symbol==="SOL",O=parseFloat(l.amount)||0,E=parseFloat(s.value.amount)||0,R=Math.abs(O-E)<1e-6,M=l.from_address===s.value.from_address&&l.to_address===s.value.to_address&&R&&A&&l.status!=="pending";return console.log(`Checking transaction ${l.id}:`,{from_match:l.from_address===s.value.from_address,to_match:l.to_address===s.value.to_address,amount_match:R,tx_amount:O,pending_amount:E,symbol_match:A,tx_symbol:l.token_symbol,pending_symbol:s.value.token_symbol,status_not_pending:l.status!=="pending",overall_match:M}),M}),console.log("Found transaction by amount and address match:",i)),i){if(console.log("Transaction found in history:",i),i.status!==s.value.status){const l=s.value.status;s.value.status=i.status,s.value.transaction_hash=i.hash,localStorage.setItem("pending_transaction",JSON.stringify(s.value)),console.log(`Transaction status changed: ${l} → ${i.status}`),(i.status==="success"||i.status==="failed")&&(v.value&&(clearInterval(v.value),v.value=null),F(),Y(!0))}}else console.log("Transaction not yet in history, still pending...")}else console.warn("Failed to fetch transaction history:",n.status)}catch(a){console.error("Error polling transaction status:",a)}}},F=()=>{C.value=3,p.value=setInterval(()=>{C.value--,C.value<=0&&H()},1e3)},X=async(a=3,e=1e3)=>{if(!r.value)return;let n=0,u=o.balances[r.value.id]?.tokens?.find(i=>i.symbol==="SOLPHIN")?.balance;for(;n<a&&(await new Promise(l=>setTimeout(l,e)),await o.loadWalletBalance(r.value.id),o.balances[r.value.id]?.tokens?.find(l=>l.symbol==="SOLPHIN")?.balance===u);)n++},N=()=>r.value?(o.balances[r.value.id]?.tokens||[]).find(e=>e.symbol==="SOLPHIN")?.balance:void 0,Y=async(a=!1)=>{if(r.value&&!f.value)try{a&&(f.value=!0),a&&await new Promise(e=>setTimeout(e,1500)),console.log(`[${a?"Auto":"Manual"}] SOLPHIN balance before refresh:`,N()),await o.refreshWalletBalance(r.value.id),await o.loadWalletBalance(r.value.id),o.balances={...o.balances},await X(),await ve(),console.log(`[${a?"Auto":"Manual"}] SOLPHIN balance after refresh:`,N()),console.log("Wallet balance refreshed successfully")}catch(e){console.error("Failed to refresh wallet balance:",e)}finally{a&&(f.value=!1)}},H=()=>{s.value=null,localStorage.removeItem("pending_transaction"),v.value&&(clearInterval(v.value),v.value=null),p.value&&(clearInterval(p.value),p.value=null)},Z=a=>a?`${a.substring(0,6)}...${a.substring(a.length-4)}`:"",ee=()=>{if(!s.value)return"";switch(s.value.status){case"success":return"transaction-tips-success";case"failed":return"transaction-tips-failed";case"pending":default:return"transaction-tips-pending"}},ae=()=>{if(!s.value)return"ri-loader-4-line animate-spin";switch(s.value.status){case"success":return"ri-check-line";case"failed":return"ri-close-line";case"pending":default:return"ri-loader-4-line animate-spin"}},te=()=>{if(!s.value)return"Transaction Processing";switch(s.value.status){case"success":return"Transaction Successful";case"failed":return"Transaction Failed";case"pending":default:return"Transaction Processing"}},se=()=>{if(!s.value)return"Transaction is being processed...";switch(s.value.status){case"success":return"Transaction has been successfully confirmed";case"failed":return"Transaction execution failed";case"pending":default:return"Transaction is being confirmed on the blockchain..."}},ne=()=>{const a=localStorage.getItem("pending_transaction");if(a)try{const e=JSON.parse(a);s.value=e,console.log("Found pending transaction:",e),e.status==="success"||e.status==="failed"?(console.log("Transaction already completed, starting auto-close countdown"),F()):(console.log("Starting transaction status polling"),v.value||(v.value=setInterval(Q,3e3)))}catch(e){console.error("Failed to parse pending transaction:",e),localStorage.removeItem("pending_transaction")}};return ce(async()=>{console.log("🚀 HomeSidePanel mounted"),S.value=!0;try{console.log("📋 Auth state:",{deviceId:w.deviceId,hasPassword:w.hasPaymentPassword,sessionValid:w.isPasswordSessionValid}),w.deviceId||(console.log("⏳ Waiting for auth initialization..."),await w.initialize()),console.log("�� Loading wallets..."),await o.loadWallets(),console.log("📱 Wallets loaded:",o.wallets.length),o.wallets.length>0&&!o.currentWallet&&(console.log("🎯 Setting current wallet:",o.wallets[0]),o.setCurrentWallet(o.wallets[0])),o.currentWallet&&(console.log("💰 Loading balance for wallet:",o.currentWallet.id),await o.loadWalletBalance(o.currentWallet.id),console.log("💰 Balance loaded:",o.totalBalance)),ne()}catch(a){console.error("❌ Failed to load wallet data:",a)}finally{S.value=!1,console.log("✅ HomeSidePanel initialization complete")}}),ue(()=>{v.value&&(clearInterval(v.value),v.value=null),p.value&&(clearInterval(p.value),p.value=null)}),(a,e)=>(d(),de(pe,{title:"Riftwallet","show-header":!0,"show-footer":!0,scrollable:!0},{header:I(()=>[U(_e,{"page-type":"home"})]),footer:I(()=>[U(he)]),default:I(()=>[t("div",ye,[s.value?(d(),g("div",{key:0,class:b(["transaction-tips",ee()])},[t("div",ke,[t("div",we,[s.value.status==="pending"?(d(),g("div",Te)):(d(),g("i",{key:1,class:b(ae())},null,2))]),t("div",Se,[t("div",Ce,c(te()),1),t("div",Ie,c(se()),1),t("div",Pe,c(s.value.amount)+" "+c(s.value.token_symbol)+" → "+c(Z(s.value.to_address)),1),s.value.status!=="pending"?(d(),g("div",Be," Auto close in "+c(C.value)+"s ",1)):_("",!0)]),t("button",{class:"tips-close",onClick:H},e[6]||(e[6]=[t("i",{class:"ri-close-line"},null,-1)]))])],2)):_("",!0),t("div",Le,[t("div",We,[e[7]||(e[7]=t("h2",{class:"balance-title"},"Total Balance",-1)),t("button",{class:"refresh-btn",onClick:K,disabled:f.value,title:"Refresh wallet balance"},[t("i",{class:b(["ri-refresh-line",{"animate-spin":f.value}])},null,2)],8,$e)]),t("div",Fe,c(m(P)(z.value)),1),t("div",{class:b(["balance-change",$(W.value)])},[t("span",Ne,c(m(P)(D.value)),1),t("span",He,"("+c(m(V)(W.value))+")",1)],2)]),t("div",Ae,[t("button",{class:"action-btn",onClick:e[0]||(e[0]=n=>m(T).push("/send"))},e[8]||(e[8]=[t("i",{class:"ri-send-plane-line"},null,-1),t("span",null,"Send",-1)])),t("button",{class:"action-btn",onClick:e[1]||(e[1]=n=>m(T).push("/receive"))},e[9]||(e[9]=[t("i",{class:"ri-qr-code-line"},null,-1),t("span",null,"Receive",-1)])),t("button",{class:"action-btn",onClick:e[2]||(e[2]=n=>m(T).push("/swap"))},e[10]||(e[10]=[t("i",{class:"ri-exchange-line"},null,-1),t("span",null,"Swap",-1)])),t("button",{class:"action-btn",onClick:e[3]||(e[3]=n=>m(T).push("/history"))},e[11]||(e[11]=[t("i",{class:"ri-history-line"},null,-1),t("span",null,"History",-1)]))]),t("div",Oe,[t("div",Ee,[e[12]||(e[12]=t("h3",{class:"section-title"},"Assets",-1)),t("div",Re,[t("button",{class:b(["tab-btn",{active:y.value==="tokens"}]),onClick:e[4]||(e[4]=n=>y.value="tokens")}," Tokens ",2),t("button",{class:b(["tab-btn",{active:y.value==="nfts"}]),onClick:e[5]||(e[5]=n=>y.value="nfts")}," NFTs ",2)])]),y.value==="tokens"?(d(),g("div",Me,[(d(!0),g(ge,null,me(B.value,n=>(d(),g("div",{key:n.token_address,class:"token-item",onClick:u=>x(n)},[t("div",Ve,[t("div",ze,[t("div",De,[t("span",Ge,c(n.symbol.charAt(0)),1)]),n.logo_url&&!n.imageError?(d(),g("img",{key:0,src:j(n),class:"token-logo",alt:n.symbol,onError:u=>J(u,n),onLoad:u=>q(u,n)},null,40,je)):_("",!0)]),t("div",Je,[t("div",qe,c(n.symbol),1),t("div",xe,c(m(P)(n.balance_usd)),1)])]),t("div",Ke,[t("div",Qe,c(G(n.balance,n.decimals)),1),t("div",{class:b(["balance-change",$(n.price_change_24h)])},c(m(V)(n.price_change_24h)),3)])],8,Ue))),128)),S.value?(d(),g("div",Xe,e[13]||(e[13]=[t("div",{class:"loading-spinner"},null,-1),t("p",null,"Loading tokens...",-1)]))):_("",!0),!S.value&&B.value.length===0?(d(),g("div",Ye,e[14]||(e[14]=[t("i",{class:"ri-coins-line"},null,-1),t("p",null,"No tokens found",-1)]))):_("",!0)])):_("",!0),y.value==="nfts"?(d(),g("div",Ze,e[15]||(e[15]=[t("div",{class:"empty-state"},[t("i",{class:"ri-image-line"}),t("p",null,"NFT support coming soon")],-1)]))):_("",!0)])])]),_:1}))}}),ra=be(ea,[["__scopeId","data-v-c747557b"]]);export{ra as default};
