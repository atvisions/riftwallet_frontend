import{M as c}from"../assets/index-DcL2QsEm.js";console.log("Riftwallet Content Script loaded");function r(){try{const e=document.createElement("script");e.src=chrome.runtime.getURL("content/injected.js"),e.onload=function(){e.parentNode&&e.parentNode.removeChild(e)},(document.head||document.documentElement).appendChild(e),console.log("Riftwallet provider injected")}catch(e){console.error("Failed to inject provider:",e)}}window.addEventListener("message",async e=>{if(e.source===window&&!(!e.data||e.data.source!=="cocowallet-injected")){console.log("Content script received message from injected script:",e.data);try{const t=await chrome.runtime.sendMessage({type:c.PROVIDER_REQUEST,data:e.data});window.postMessage({source:"cocowallet-content",id:e.data.id,response:t},"*")}catch(t){console.error("Failed to handle provider request:",t),window.postMessage({source:"cocowallet-content",id:e.data.id,error:t.message},"*")}}});chrome.runtime.onMessage.addListener((e,t,o)=>{switch(console.log("Content script received message from background:",e.type),e.type){case c.INJECT_PROVIDER:r(),o({success:!0});break;default:o({success:!1,error:"Unknown message type"})}return!0});document.readyState==="loading"?document.addEventListener("DOMContentLoaded",r):r();function s(){["web3","ethers","Web3","ethereum"].some(o=>window.hasOwnProperty(o)||document.querySelector(`script[src*="${o}"]`)!==null)&&(console.log("DApp detected, Riftwallet provider available"),chrome.runtime.sendMessage({type:"DAPP_DETECTED",data:{url:window.location.href,title:document.title}}))}setTimeout(s,2e3);let n=location.href;new MutationObserver(()=>{const e=location.href;e!==n&&(n=e,setTimeout(s,1e3))}).observe(document,{subtree:!0,childList:!0});
